#!/usr/bin/env python

from GmailWrapper import GmailWrapper
 
import RPi.GPIO as GPIO
import time
import smtplib
import datetime
 
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

HOSTNAME = 'imap.gmail.com'
USERNAME = 'dangcatfeeder@gmail.com'
PASSWORD = 'rnjszabbdrzljbzq'

def SendConfimationEmail(toaddr):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    msg = MIMEMultipart()
    msg['From'] = USERNAME
    msg['To'] = toaddr
    msg['Subject'] = "Cats have been fed at " + datetime.datetime.now() + "."
    body = "ROOW ROWWWW. We have successfully fed kittens."
    msg.attach(MIMEText(body,'plain'))
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo
    server.starttls()
    server.login(USERNAME, "Chubbub315")
    text = msg.as_string()
    server.sendmail(USERNAME, toaddr, text)
    server.quit()

def feedByGmail():
    gmailWrapper = GmailWrapper(HOSTNAME, USERNAME, PASSWORD)
    ids = gmailWrapper.getIdsBySubject('feed cats')
    if(len(ids) > 0):
        try:
	    feed()
	    gmailWrapper.markAsRead(ids)
	except:
	    print("Failed to feed cats, they're starvinggggg")

def trySubject(subject):
    gmailWrapper = GmailWrapper(HOSTNAME, USERNAME, PASSWORD)
    #number = the number that is in the subject string feed cats 
    number = subject[10:]
    subject = subject[:-2]
    print("Your current [subject] is " + subject + ".")
    print("Your current [number] is " + number  + ".")
    ids = gmailWrapper.getIdsBySubject(subject)
    if(len(ids) > 0):
        print("hit")
	try:
	    number = int(number)
	    if(number == 1):
		feedMe(1)
		print("I fed your cat one serving.")
	    if(number == 2):
		feedMe(2)
		print("I fed your cat two servings.")
	    if(number == 3):
		feedMe(3)
		print("I fed your cat three servings.")
	    gmailWrapper.markAsRead(ids)
	except:
	    print("Failed to feed cats specific number...")

def feedMe(times):
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(18, GPIO.OUT)

    try:
	servo = GPIO.PWM(18, 50)
	servo.start(12.5)
	for index in range(0, times):
	    dutyCycle = 2.5 if (index % 2 == 0) else 12.5
	    servo.ChangeDutyCycle(dutyCycle)
	    time.sleep(0.8)
    finally:
        servo.stop()
	GPIO.cleanup()

def feed():
    # let the GPIO library know where we've connected our servo to the Pi
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(18, GPIO.OUT)
 
    try:
        servo = GPIO.PWM(18, 50)
        servo.start(12.5)
 
        # spin left, right, then left again rather than in a continuous circle
        # to prevent the food from jamming the servo
        for index in range(0, 5):
            dutyCycle = 2.5 if (index % 2 == 0) else 12.5
            servo.ChangeDutyCycle(dutyCycle)
            # adjust the sleep time to have the servo spin longer or shorter in that direction
            time.sleep(0.8) 
    finally:
        # always cleanup after ourselves
        servo.stop()
        GPIO.cleanup()
 
def getEmailer():
    mail = imaplib.IMAP4_SSL(HOSTNAME)
    mail.login(USERNAME, PASSWORD)
    emai
    return email

def getSubject():
    
    gmailWrapper = GmailWrapper(HOSTNAME, USERNAME, PASSWORD)
    subject = '1'
    return subject

if __name__ == '__main__':
    # kick off the feeding process (move the servo)
    feedByGmail()
    #trySubject()
    #need to getSubject too.
